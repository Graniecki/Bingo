{"version":3,"sources":["components/NumberContext.jsx","components/BingoHeader/BingoHeader.jsx","components/winCheck.js","components/BodyCells/BodyCells.jsx","components/BingoBody/BingoBody.jsx","components/BingoCard/BingoCard.jsx","components/PlayPannel/PlayPannel.jsx","components/LotteryDrom/LotteryDrom.jsx","components/WinBlock/WinBlock.jsx","App.js","reportWebVitals.js","index.js"],"names":["NumberContext","React","createContext","BingoHeader","className","map","letter","winCombinations","BodyCells","memo","num","index","setWin","number","useContext","useState","selected","setSelected","row","classNames","data-order","onClick","event","target","innerText","dataset","classList","includes","order","some","BingoBody","bingoNumbers","useMemo","randomArr","Array","from","length","Math","ceil","random","BingoCard","PlayPannel","setNumber","type","LotteryDrom","WinBlock","App","win","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca57a20d.chunk.js","sourcesContent":["import React from 'react';\n\nexport const NumberContext = React.createContext('');\n","import React from 'react';\nimport './BingoHeader.css';\n\nexport const BingoHeader = () => {\n  const BINGO = ['B', 'I', 'N', 'G', 'O'];\n\n  return (\n    <div className=\"bingo__header\">\n      {BINGO.map(letter => (\n        <div\n          className=\"header-cell\"\n          key={letter}\n        >\n          {letter}\n        </div>\n      ))}\n    </div>\n  );\n};\n","const firstRow = 0;\nconst secondRow = 0;\nconst thirdRow = 0;\nconst gourthRow = 0;\nconst fifthRow = 0;\n\nconst firstColumn = 0;\nconst secondColumn = 0;\nconst thirdColumn = 0;\nconst gourthColumn = 0;\nconst fifthColumn = 0;\n\nconst leftDiagonal = 0;\nconst rightDiagonal = 0;\n\n\nexport const winCombinations = [\n  firstRow,\n  secondRow,\n  thirdRow,\n  gourthRow,\n  fifthRow,\n  firstColumn,\n  secondColumn,\n  thirdColumn,\n  gourthColumn,\n  fifthColumn,\n  leftDiagonal,\n  rightDiagonal,\n];","/* eslint-disable default-case */\nimport React, { useContext, useState } from 'react';\nimport './BodyCells.css';\n\nimport classNames from 'classnames';\nimport { NumberContext } from '../NumberContext';\nimport { winCombinations } from '../winCheck';\n\nexport const BodyCells = React.memo(\n  ({ num, index, setWin }) => {\n    const number = useContext(NumberContext);\n    const [selected, setSelected] = useState(false);\n    const row = winCombinations;\n    const selectNumber = (event) => {\n      const { innerText, dataset } = event.target;\n\n      if (\n          (+innerText !== number && innerText !== 'FREE')\n          || [...event.target.classList].includes('selected')\n        ) {\n        return;\n      }\n\n      setSelected(true);\n\n      // Checking a rows\n      switch (true) {\n        case +dataset.order <= 5 :\n          row[0]++;\n          break;\n        case +dataset.order <= 10 :\n          row[1]++;\n          break;\n        case +dataset.order <= 15 :\n          row[2]++;\n          break;\n        case +dataset.order <= 20 :\n          row[3]++;\n          break;\n        case +dataset.order <= 25 :\n          row[4]++;\n          break;\n      }\n\n      // Checking a columns\n      switch (true) {\n        case +dataset.order === 1 :\n        case +dataset.order === 6 :\n        case +dataset.order === 11 :\n        case +dataset.order === 16 :\n        case +dataset.order === 21 :\n          row[5]++;\n          break;\n        case +dataset.order === 2 :\n        case +dataset.order === 7 :\n        case +dataset.order === 12 :\n        case +dataset.order === 17 :\n        case +dataset.order === 22 :\n          row[6]++;\n          break;\n        case +dataset.order === 3 :\n        case +dataset.order === 8 :\n        case +dataset.order === 13 :\n        case +dataset.order === 18 :\n        case +dataset.order === 23 :\n          row[7]++;\n          break;\n        case +dataset.order === 4 :\n        case +dataset.order === 9 :\n        case +dataset.order === 14 :\n        case +dataset.order === 19 :\n        case +dataset.order === 24 :\n          row[8]++;\n          break;\n        case +dataset.order === 5 :\n        case +dataset.order === 10 :\n        case +dataset.order === 15 :\n        case +dataset.order === 20 :\n        case +dataset.order === 25 :\n          row[9]++;\n          break;\n      }\n\n      // Checking a diagonals\n      switch (true) {\n        case +dataset.order === 1 :\n        case +dataset.order === 7 :\n        case +dataset.order === 19 :\n        case +dataset.order === 25 :\n          row[10]++;\n          break;\n        case +dataset.order === 5 :\n        case +dataset.order === 9 :\n        case +dataset.order === 17 :\n        case +dataset.order === 21 :\n          row[11]++;\n          break;\n        case +dataset.order === 13 :\n          row[10]++;\n          row[11]++;\n          break;\n      }\n\n      if (row.some(number => number === 5)) {\n        setWin(true);\n      }\n    };\n\n    return (\n      <div\n        className={classNames({\n          'body-cell': true,\n          'selected': selected,\n        })}\n        data-order={index + 1}\n        onClick={selectNumber}\n      >\n        {num}\n      </div>\n    );\n  }\n);\n","import React, { useMemo } from 'react';\nimport './BingoBody.css';\n\nimport { BodyCells } from '../BodyCells';\n\nexport const BingoBody = React.memo(\n  ({ setWin }) => {\n    const bingoNumbers = useMemo(() => {\n      const randomArr = Array.from(\n        { length: 25 },\n        () => Math.ceil(Math.random() * 90),\n      );\n\n      randomArr[12] = 'FREE';\n\n      return randomArr;\n    }, []);\n  \n    return (\n      <div className=\"bingo__body\">\n        {bingoNumbers.map((num, index) => (\n          <BodyCells\n            key={`${Math.random() * 100}`}\n            num={num}\n            index={index}\n            setWin={setWin}\n          />\n        ))}\n      </div>\n    );\n  }\n);\n","import React from 'react';\nimport './BingoCard.css';\n\nimport { BingoHeader } from '../BingoHeader';\nimport { BingoBody } from '../BingoBody';\n\nexport const BingoCard = React.memo(\n  ({ setWin }) => {\n\n    return (\n      <div className=\"bingo__card\">\n        <BingoHeader/>\n        <BingoBody setWin={setWin} />\n      </div>\n    );\n  }\n);\n","import React, { useContext } from 'react';\nimport './PlayPannel.css';\n\nimport { NumberContext } from '../NumberContext';\n\nexport const PlayPannel = ({setNumber}) => {\n  const number = useContext(NumberContext);\n\n  const randomize = () => {\n    setNumber(Math.ceil(Math.random() * 90));\n  };\n\n  return (\n    <>\n      <h1>{number}</h1>\n      <button\n        type=\"button\"\n        onClick={randomize}\n      >\n        Change number\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport './LotteryDrom.css';\n\nimport { PlayPannel } from '../PlayPannel';\n\nexport const LotteryDrom = ({ setNumber }) => {\n\n  return (\n    <div className=\"lottery-drom\">\n      <PlayPannel setNumber={setNumber} />\n    </div>\n  );\n};\n","import React from 'react';\nimport './WinBlock.css';\n\nexport const WinBlock = () => {\n\n  return (\n    <div className=\"win\">\n      <span>BINGO</span>\n      <p>To start a new game, refresh the page</p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { NumberContext } from './components/NumberContext';\nimport { BingoCard } from './components/BingoCard';\nimport { LotteryDrom } from './components/LotteryDrom';\nimport { WinBlock } from './components/WinBlock';\n\nfunction App() {\n  const [number, setNumber] = useState('-');\n  const [win, setWin] = useState(false);\n\n  return (\n    <NumberContext.Provider value={number}>\n      <div className=\"App\">\n        <LotteryDrom setNumber={setNumber} />\n        <BingoCard setWin={setWin} />\n        {win && <WinBlock />}\n      </div>\n    </NumberContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}